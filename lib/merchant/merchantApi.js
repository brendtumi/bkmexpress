"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var request = require("request-promise");
var MerchantApi = (function () {
    function MerchantApi() {
    }
    MerchantApi.login = function (baseUrl, body) {
        var opts = lodash_1.extend(MerchantApi.opts, { baseUrl: baseUrl, body: body });
        return request("merchant/login", opts);
    };
    MerchantApi.ticket = function (baseUrl, token, body) {
        var opts = lodash_1.extend(MerchantApi.opts, { baseUrl: baseUrl, body: body, headers: { "Bex-Connection": token.Token } });
        return request("merchant/" + token.Path + "/ticket?type=" + body.Type, opts);
    };
    MerchantApi.result = function (baseUrl, token, ticketId) {
        var opts = lodash_1.extend(MerchantApi.opts, { baseUrl: baseUrl, headers: { "Bex-Connection": token.Token } });
        return request("merchant/" + token.Path + "/ticket/" + ticketId + "/operate?name=result", opts);
    };
    MerchantApi.commit = function (baseUrl, token, body) {
        var opts = lodash_1.extend(MerchantApi.opts, { baseUrl: baseUrl, headers: { "Bex-Connection": token.Token, "Bex-Nonce": body.Nonce } });
        return request("merchant/" + token.Path + "/ticket/" + body.Id + "/operate?name=commit", opts);
    };
    return MerchantApi;
}());
MerchantApi.opts = {
    baseUrl: null,
    body: {},
    headers: {},
    json: true,
    method: "POST",
    timeout: 20000,
};
exports.MerchantApi = MerchantApi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyY2hhbnRBcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWVyY2hhbnQvbWVyY2hhbnRBcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSxpQ0FBOEI7QUFFOUIseUNBQTJDO0FBVTNDO0lBQUE7SUFtQ0EsQ0FBQztJQXJCaUIsaUJBQUssR0FBbkIsVUFBb0IsT0FBZSxFQUFFLElBQTBCO1FBQzNELElBQU0sSUFBSSxHQUFnQixlQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFDLE9BQU8sU0FBQSxFQUFFLElBQUksTUFBQSxFQUFDLENBQUMsQ0FBQztRQUNwRSxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFYSxrQkFBTSxHQUFwQixVQUFxQixPQUFlLEVBQUUsS0FBWSxFQUFFLElBQW1CO1FBQ25FLElBQU0sSUFBSSxHQUFnQixlQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFDLE9BQU8sU0FBQSxFQUFFLElBQUksTUFBQSxFQUFFLE9BQU8sRUFBRSxFQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUMsRUFBQyxDQUFDLENBQUM7UUFDOUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFZLEtBQUssQ0FBQyxJQUFJLHFCQUFnQixJQUFJLENBQUMsSUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFYSxrQkFBTSxHQUFwQixVQUFxQixPQUFlLEVBQUUsS0FBWSxFQUFFLFFBQWdCO1FBQ2hFLElBQU0sSUFBSSxHQUFnQixlQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFDLE9BQU8sU0FBQSxFQUFFLE9BQU8sRUFBRSxFQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUMsRUFBQyxDQUFDLENBQUM7UUFDeEcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFZLEtBQUssQ0FBQyxJQUFJLGdCQUFXLFFBQVEseUJBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFMUYsQ0FBQztJQUVhLGtCQUFNLEdBQXBCLFVBQXFCLE9BQWUsRUFBRSxLQUFZLEVBQUUsSUFBMkI7UUFDM0UsSUFBTSxJQUFJLEdBQWdCLGVBQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLEVBQUMsT0FBTyxTQUFBLEVBQUUsT0FBTyxFQUFFLEVBQUMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztRQUNqSSxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQVksS0FBSyxDQUFDLElBQUksZ0JBQVcsSUFBSSxDQUFDLEVBQUUseUJBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQUVMLGtCQUFDO0FBQUQsQ0FBQyxBQW5DRDtBQUNrQixnQkFBSSxHQUFnQjtJQUM5QixPQUFPLEVBQUUsSUFBSTtJQUNiLElBQUksRUFBRSxFQUFFO0lBQ1IsT0FBTyxFQUFFLEVBSVI7SUFDRCxJQUFJLEVBQUUsSUFBSTtJQUNWLE1BQU0sRUFBRSxNQUFNO0lBQ2QsT0FBTyxFQUFFLEtBQUs7Q0FDakIsQ0FBQztBQVpPLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yICBUw7xtYXkgw4dlYmVyIDx0dW1heWNlYmVyQGdtYWlsLmNvbT5cbiAqIEBsaW5rICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9icmVuZHR1bWkvYmttZXhwcmVzc1xuICogQGxpY2Vuc2UgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxuICogQGRhdGUgMjcuMDQuMjAxN1xuICovXG5cbmltcG9ydCB7ZXh0ZW5kfSBmcm9tIFwibG9kYXNoXCI7XG5pbXBvcnQge0NvcmVPcHRpb25zfSBmcm9tIFwicmVxdWVzdFwiO1xuaW1wb3J0ICogYXMgcmVxdWVzdCBmcm9tIFwicmVxdWVzdC1wcm9taXNlXCI7XG5pbXBvcnQge01lcmNoYW50TG9naW5SZXF1ZXN0fSBmcm9tIFwiLi9yZXF1ZXN0L21lcmNoYW50TG9naW5SZXF1ZXN0XCI7XG5pbXBvcnQge1RpY2tldFJlcXVlc3R9IGZyb20gXCIuL3JlcXVlc3QvdGlja2V0UmVxdWVzdFwiO1xuaW1wb3J0IHtNZXJjaGFudExvZ2luUmVzcG9uc2V9IGZyb20gXCIuL3Jlc3BvbnNlL21lcmNoYW50TG9naW5SZXNwb25zZVwiO1xuaW1wb3J0IHtNZXJjaGFudE5vbmNlUmVzcG9uc2V9IGZyb20gXCIuL3Jlc3BvbnNlL25vbmNlL21lcmNoYW50Tm9uY2VSZXNwb25zZVwiO1xuaW1wb3J0IHtOb25jZVJlc3VsdFJlc3BvbnNlfSBmcm9tIFwiLi9yZXNwb25zZS9ub25jZS9ub25jZVJlc3VsdFJlc3BvbnNlXCI7XG5pbXBvcnQge1BheW1lbnRSZXN1bHRSZXNwb25zZX0gZnJvbSBcIi4vcmVzcG9uc2UvcGF5bWVudFJlc3VsdFJlc3BvbnNlXCI7XG5pbXBvcnQge1RpY2tldFJlc3BvbnNlfSBmcm9tIFwiLi9yZXNwb25zZS90aWNrZXRSZXNwb25zZVwiO1xuaW1wb3J0IHtUb2tlbn0gZnJvbSBcIi4vdG9rZW5cIjtcblxuZXhwb3J0IGNsYXNzIE1lcmNoYW50QXBpIHtcbiAgICBwdWJsaWMgc3RhdGljIG9wdHM6IENvcmVPcHRpb25zID0ge1xuICAgICAgICBiYXNlVXJsOiBudWxsLFxuICAgICAgICBib2R5OiB7fSxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgLy8gXCJCZXgtQ29ubmVjdGlvblwiOiBUb2tlbi5Ub2tlbixcbiAgICAgICAgICAgIC8vIFwiQmV4LU5vbmNlXCI6IE1lcmNoYW50Tm9uY2VSZXNwb25zZS5Ob25jZSxcbiAgICAgICAgICAgIC8vIFwiQmV4LVRpY2tldFwiOiBcIlwiLFxuICAgICAgICB9LFxuICAgICAgICBqc29uOiB0cnVlLFxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICB0aW1lb3V0OiAyMDAwMCxcbiAgICB9O1xuXG4gICAgcHVibGljIHN0YXRpYyBsb2dpbihiYXNlVXJsOiBzdHJpbmcsIGJvZHk6IE1lcmNoYW50TG9naW5SZXF1ZXN0KTogUHJvbWlzZTxNZXJjaGFudExvZ2luUmVzcG9uc2UgfCBFcnJvcj4ge1xuICAgICAgICBjb25zdCBvcHRzOiBDb3JlT3B0aW9ucyA9IGV4dGVuZChNZXJjaGFudEFwaS5vcHRzLCB7YmFzZVVybCwgYm9keX0pO1xuICAgICAgICByZXR1cm4gcmVxdWVzdChcIm1lcmNoYW50L2xvZ2luXCIsIG9wdHMpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgdGlja2V0KGJhc2VVcmw6IHN0cmluZywgdG9rZW46IFRva2VuLCBib2R5OiBUaWNrZXRSZXF1ZXN0KTogUHJvbWlzZTxUaWNrZXRSZXNwb25zZSB8IEVycm9yPiB7XG4gICAgICAgIGNvbnN0IG9wdHM6IENvcmVPcHRpb25zID0gZXh0ZW5kKE1lcmNoYW50QXBpLm9wdHMsIHtiYXNlVXJsLCBib2R5LCBoZWFkZXJzOiB7XCJCZXgtQ29ubmVjdGlvblwiOiB0b2tlbi5Ub2tlbn19KTtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3QoYG1lcmNoYW50LyR7dG9rZW4uUGF0aH0vdGlja2V0P3R5cGU9JHtib2R5LlR5cGV9YCwgb3B0cyk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyByZXN1bHQoYmFzZVVybDogc3RyaW5nLCB0b2tlbjogVG9rZW4sIHRpY2tldElkOiBzdHJpbmcpOiBQcm9taXNlPFBheW1lbnRSZXN1bHRSZXNwb25zZSB8IEVycm9yPiB7XG4gICAgICAgIGNvbnN0IG9wdHM6IENvcmVPcHRpb25zID0gZXh0ZW5kKE1lcmNoYW50QXBpLm9wdHMsIHtiYXNlVXJsLCBoZWFkZXJzOiB7XCJCZXgtQ29ubmVjdGlvblwiOiB0b2tlbi5Ub2tlbn19KTtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3QoYG1lcmNoYW50LyR7dG9rZW4uUGF0aH0vdGlja2V0LyR7dGlja2V0SWR9L29wZXJhdGU/bmFtZT1yZXN1bHRgLCBvcHRzKTtcblxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgY29tbWl0KGJhc2VVcmw6IHN0cmluZywgdG9rZW46IFRva2VuLCBib2R5OiBNZXJjaGFudE5vbmNlUmVzcG9uc2UpOiBQcm9taXNlPE5vbmNlUmVzdWx0UmVzcG9uc2UgfCBFcnJvcj4ge1xuICAgICAgICBjb25zdCBvcHRzOiBDb3JlT3B0aW9ucyA9IGV4dGVuZChNZXJjaGFudEFwaS5vcHRzLCB7YmFzZVVybCwgaGVhZGVyczoge1wiQmV4LUNvbm5lY3Rpb25cIjogdG9rZW4uVG9rZW4sIFwiQmV4LU5vbmNlXCI6IGJvZHkuTm9uY2V9fSk7XG4gICAgICAgIHJldHVybiByZXF1ZXN0KGBtZXJjaGFudC8ke3Rva2VuLlBhdGh9L3RpY2tldC8ke2JvZHkuSWR9L29wZXJhdGU/bmFtZT1jb21taXRgLCBvcHRzKTtcbiAgICB9XG5cbn1cbiJdfQ==