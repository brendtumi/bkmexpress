"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var exceptions_1 = require("./exceptions");
var Environment = (function () {
    function Environment() {
    }
    return Environment;
}());
Environment.DEV = "DEV";
Environment.LOCAL = "LOCAL";
Environment.SANDBOX = "SANDBOX";
Environment.PRODUCTION = "PRODUCTION";
exports.Environment = Environment;
var Banks = (function () {
    function Banks() {
    }
    Banks.validate = function (bankCode) {
        switch (bankCode) {
            case this.ALBARAKA:
                return this.ALBARAKA;
            case this.AKBANK:
                return this.AKBANK;
            case this.BANKASYA:
                return this.BANKASYA;
            case this.DENIZBANK:
                return this.DENIZBANK;
            case this.FINANSBANK:
                return this.FINANSBANK;
            case this.GARANTI:
                return this.GARANTI;
            case this.HALKBANK:
                return this.HALKBANK;
            case this.HSBC:
                return this.HSBC;
            case this.ISBANK:
                return this.ISBANK;
            case this.ING:
                return this.ING;
            case this.KUVEYTTURK:
                return this.KUVEYTTURK;
            case this.ODEABANK:
                return this.ODEABANK;
            case this.SEKERBANK:
                return this.SEKERBANK;
            case this.TEBBANK:
                return this.TEBBANK;
            case this.TFKB:
                return this.TFKB;
            case this.VAKIFBANK:
                return this.VAKIFBANK;
            case this.YKB:
                return this.YKB;
            case this.ZIRAATBANK:
                return this.ZIRAATBANK;
            default:
                throw new exceptions_1.BexException("Please check your bank code!");
        }
    };
    return Banks;
}());
Banks.ALBARAKA = "0203";
Banks.AKBANK = "0046";
Banks.BANKASYA = "0208";
Banks.DENIZBANK = "0134";
Banks.FINANSBANK = "0111";
Banks.GARANTI = "0062";
Banks.HALKBANK = "0012";
Banks.HSBC = "0123";
Banks.ISBANK = "0064";
Banks.ING = "0099";
Banks.KUVEYTTURK = "0205";
Banks.ODEABANK = "0146";
Banks.SEKERBANK = "0059";
Banks.TEBBANK = "0032";
Banks.TFKB = "0206";
Banks.VAKIFBANK = "0015";
Banks.YKB = "0067";
Banks.ZIRAATBANK = "0010";
exports.Banks = Banks;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZW51bXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSwyQ0FBMEM7QUFDMUM7SUFBQTtJQUtBLENBQUM7SUFBRCxrQkFBQztBQUFELENBQUMsQUFMRDtBQUNrQixlQUFHLEdBQUcsS0FBSyxDQUFDO0FBQ1osaUJBQUssR0FBRyxPQUFPLENBQUM7QUFDaEIsbUJBQU8sR0FBRyxTQUFTLENBQUM7QUFDcEIsc0JBQVUsR0FBRyxZQUFZLENBQUM7QUFKL0Isa0NBQVc7QUFPeEI7SUFBQTtJQThEQSxDQUFDO0lBMUNpQixjQUFRLEdBQXRCLFVBQXVCLFFBQWdCO1FBQ25DLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDZixLQUFLLElBQUksQ0FBQyxRQUFRO2dCQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3pCLEtBQUssSUFBSSxDQUFDLE1BQU07Z0JBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdkIsS0FBSyxJQUFJLENBQUMsUUFBUTtnQkFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUN6QixLQUFLLElBQUksQ0FBQyxTQUFTO2dCQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQzFCLEtBQUssSUFBSSxDQUFDLFVBQVU7Z0JBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQzNCLEtBQUssSUFBSSxDQUFDLE9BQU87Z0JBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDeEIsS0FBSyxJQUFJLENBQUMsUUFBUTtnQkFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUN6QixLQUFLLElBQUksQ0FBQyxJQUFJO2dCQUNWLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3JCLEtBQUssSUFBSSxDQUFDLE1BQU07Z0JBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdkIsS0FBSyxJQUFJLENBQUMsR0FBRztnQkFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUNwQixLQUFLLElBQUksQ0FBQyxVQUFVO2dCQUNoQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUMzQixLQUFLLElBQUksQ0FBQyxRQUFRO2dCQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3pCLEtBQUssSUFBSSxDQUFDLFNBQVM7Z0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDMUIsS0FBSyxJQUFJLENBQUMsT0FBTztnQkFDYixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUN4QixLQUFLLElBQUksQ0FBQyxJQUFJO2dCQUNWLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3JCLEtBQUssSUFBSSxDQUFDLFNBQVM7Z0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDMUIsS0FBSyxJQUFJLENBQUMsR0FBRztnQkFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUNwQixLQUFLLElBQUksQ0FBQyxVQUFVO2dCQUNoQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUMzQjtnQkFDSSxNQUFNLElBQUkseUJBQVksQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQy9ELENBQUM7SUFDTCxDQUFDO0lBQ0wsWUFBQztBQUFELENBQUMsQUE5REQ7QUFDa0IsY0FBUSxHQUFXLE1BQU0sQ0FBQztBQUMxQixZQUFNLEdBQVcsTUFBTSxDQUFDO0FBQ3hCLGNBQVEsR0FBVyxNQUFNLENBQUM7QUFDMUIsZUFBUyxHQUFXLE1BQU0sQ0FBQztBQUMzQixnQkFBVSxHQUFXLE1BQU0sQ0FBQztBQUM1QixhQUFPLEdBQVcsTUFBTSxDQUFDO0FBQ3pCLGNBQVEsR0FBVyxNQUFNLENBQUM7QUFDMUIsVUFBSSxHQUFXLE1BQU0sQ0FBQztBQUN0QixZQUFNLEdBQVcsTUFBTSxDQUFDO0FBQ3hCLFNBQUcsR0FBVyxNQUFNLENBQUM7QUFDckIsZ0JBQVUsR0FBVyxNQUFNLENBQUM7QUFDNUIsY0FBUSxHQUFXLE1BQU0sQ0FBQztBQUMxQixlQUFTLEdBQVcsTUFBTSxDQUFDO0FBQzNCLGFBQU8sR0FBVyxNQUFNLENBQUM7QUFDekIsVUFBSSxHQUFXLE1BQU0sQ0FBQztBQUN0QixlQUFTLEdBQVcsTUFBTSxDQUFDO0FBQzNCLFNBQUcsR0FBVyxNQUFNLENBQUM7QUFDckIsZ0JBQVUsR0FBVyxNQUFNLENBQUM7QUFsQmpDLHNCQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yICBUw7xtYXkgw4dlYmVyIDx0dW1heWNlYmVyQGdtYWlsLmNvbT5cbiAqIEBsaW5rICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9icmVuZHR1bWkvYmttZXhwcmVzc1xuICogQGxpY2Vuc2UgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1jbGFzc2VzLXBlci1maWxlICovXG5pbXBvcnQge0JleEV4Y2VwdGlvbn0gZnJvbSBcIi4vZXhjZXB0aW9uc1wiO1xuZXhwb3J0IGNsYXNzIEVudmlyb25tZW50IHtcbiAgICBwdWJsaWMgc3RhdGljIERFViA9IFwiREVWXCI7XG4gICAgcHVibGljIHN0YXRpYyBMT0NBTCA9IFwiTE9DQUxcIjtcbiAgICBwdWJsaWMgc3RhdGljIFNBTkRCT1ggPSBcIlNBTkRCT1hcIjtcbiAgICBwdWJsaWMgc3RhdGljIFBST0RVQ1RJT04gPSBcIlBST0RVQ1RJT05cIjtcbn1cblxuZXhwb3J0IGNsYXNzIEJhbmtzIHtcbiAgICBwdWJsaWMgc3RhdGljIEFMQkFSQUtBOiBzdHJpbmcgPSBcIjAyMDNcIjtcbiAgICBwdWJsaWMgc3RhdGljIEFLQkFOSzogc3RyaW5nID0gXCIwMDQ2XCI7XG4gICAgcHVibGljIHN0YXRpYyBCQU5LQVNZQTogc3RyaW5nID0gXCIwMjA4XCI7XG4gICAgcHVibGljIHN0YXRpYyBERU5JWkJBTks6IHN0cmluZyA9IFwiMDEzNFwiO1xuICAgIHB1YmxpYyBzdGF0aWMgRklOQU5TQkFOSzogc3RyaW5nID0gXCIwMTExXCI7XG4gICAgcHVibGljIHN0YXRpYyBHQVJBTlRJOiBzdHJpbmcgPSBcIjAwNjJcIjtcbiAgICBwdWJsaWMgc3RhdGljIEhBTEtCQU5LOiBzdHJpbmcgPSBcIjAwMTJcIjtcbiAgICBwdWJsaWMgc3RhdGljIEhTQkM6IHN0cmluZyA9IFwiMDEyM1wiO1xuICAgIHB1YmxpYyBzdGF0aWMgSVNCQU5LOiBzdHJpbmcgPSBcIjAwNjRcIjtcbiAgICBwdWJsaWMgc3RhdGljIElORzogc3RyaW5nID0gXCIwMDk5XCI7XG4gICAgcHVibGljIHN0YXRpYyBLVVZFWVRUVVJLOiBzdHJpbmcgPSBcIjAyMDVcIjtcbiAgICBwdWJsaWMgc3RhdGljIE9ERUFCQU5LOiBzdHJpbmcgPSBcIjAxNDZcIjtcbiAgICBwdWJsaWMgc3RhdGljIFNFS0VSQkFOSzogc3RyaW5nID0gXCIwMDU5XCI7XG4gICAgcHVibGljIHN0YXRpYyBURUJCQU5LOiBzdHJpbmcgPSBcIjAwMzJcIjtcbiAgICBwdWJsaWMgc3RhdGljIFRGS0I6IHN0cmluZyA9IFwiMDIwNlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgVkFLSUZCQU5LOiBzdHJpbmcgPSBcIjAwMTVcIjtcbiAgICBwdWJsaWMgc3RhdGljIFlLQjogc3RyaW5nID0gXCIwMDY3XCI7XG4gICAgcHVibGljIHN0YXRpYyBaSVJBQVRCQU5LOiBzdHJpbmcgPSBcIjAwMTBcIjtcblxuICAgIHB1YmxpYyBzdGF0aWMgdmFsaWRhdGUoYmFua0NvZGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICAgIHN3aXRjaCAoYmFua0NvZGUpIHtcbiAgICAgICAgICAgIGNhc2UgdGhpcy5BTEJBUkFLQSA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuQUxCQVJBS0E7XG4gICAgICAgICAgICBjYXNlIHRoaXMuQUtCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5BS0JBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuQkFOS0FTWUEgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkJBTktBU1lBO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkRFTklaQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuREVOSVpCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkZJTkFOU0JBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkZJTkFOU0JBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuR0FSQU5USSA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuR0FSQU5USTtcbiAgICAgICAgICAgIGNhc2UgdGhpcy5IQUxLQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuSEFMS0JBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuSFNCQyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuSFNCQztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5JU0JBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLklTQkFOSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5JTkcgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLklORztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5LVVZFWVRUVVJLIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5LVVZFWVRUVVJLO1xuICAgICAgICAgICAgY2FzZSB0aGlzLk9ERUFCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5PREVBQkFOSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5TRUtFUkJBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlNFS0VSQkFOSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5URUJCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5URUJCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLlRGS0IgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlRGS0I7XG4gICAgICAgICAgICBjYXNlIHRoaXMuVkFLSUZCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5WQUtJRkJBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuWUtCIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ZS0I7XG4gICAgICAgICAgICBjYXNlIHRoaXMuWklSQUFUQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuWklSQUFUQkFOSztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEJleEV4Y2VwdGlvbihcIlBsZWFzZSBjaGVjayB5b3VyIGJhbmsgY29kZSFcIik7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=