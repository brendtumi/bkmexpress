"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var exceptions_1 = require("./exceptions");
var Environment;
(function (Environment) {
    Environment[Environment["DEV"] = 1] = "DEV";
    Environment[Environment["LOCAL"] = 2] = "LOCAL";
    Environment[Environment["SANDBOX"] = 3] = "SANDBOX";
    Environment[Environment["PRODUCTION"] = 4] = "PRODUCTION";
})(Environment = exports.Environment || (exports.Environment = {}));
var Banks = (function () {
    function Banks() {
    }
    Banks.validate = function (bankCode) {
        switch (bankCode) {
            case this.ALBARAKA:
                return this.ALBARAKA;
            case this.AKBANK:
                return this.AKBANK;
            case this.BANKASYA:
                return this.BANKASYA;
            case this.DENIZBANK:
                return this.DENIZBANK;
            case this.FINANSBANK:
                return this.FINANSBANK;
            case this.GARANTI:
                return this.GARANTI;
            case this.HALKBANK:
                return this.HALKBANK;
            case this.HSBC:
                return this.HSBC;
            case this.ISBANK:
                return this.ISBANK;
            case this.ING:
                return this.ING;
            case this.KUVEYTTURK:
                return this.KUVEYTTURK;
            case this.ODEABANK:
                return this.ODEABANK;
            case this.SEKERBANK:
                return this.SEKERBANK;
            case this.TEBBANK:
                return this.TEBBANK;
            case this.TFKB:
                return this.TFKB;
            case this.VAKIFBANK:
                return this.VAKIFBANK;
            case this.YKB:
                return this.YKB;
            case this.ZIRAATBANK:
                return this.ZIRAATBANK;
            default:
                throw new exceptions_1.BexException("Please check your bank code!");
        }
    };
    return Banks;
}());
Banks.ALBARAKA = "0203";
Banks.AKBANK = "0046";
Banks.BANKASYA = "0208";
Banks.DENIZBANK = "0134";
Banks.FINANSBANK = "0111";
Banks.GARANTI = "0062";
Banks.HALKBANK = "0012";
Banks.HSBC = "0123";
Banks.ISBANK = "0064";
Banks.ING = "0099";
Banks.KUVEYTTURK = "0205";
Banks.ODEABANK = "0146";
Banks.SEKERBANK = "0059";
Banks.TEBBANK = "0032";
Banks.TFKB = "0206";
Banks.VAKIFBANK = "0015";
Banks.YKB = "0067";
Banks.ZIRAATBANK = "0010";
exports.Banks = Banks;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZW51bXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSwyQ0FBMEM7QUFDMUMsSUFBWSxXQUtYO0FBTEQsV0FBWSxXQUFXO0lBQ25CLDJDQUFPLENBQUE7SUFDUCwrQ0FBSyxDQUFBO0lBQ0wsbURBQU8sQ0FBQTtJQUNQLHlEQUFVLENBQUE7QUFDZCxDQUFDLEVBTFcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFLdEI7QUFFRDtJQUFBO0lBOERBLENBQUM7SUExQ2lCLGNBQVEsR0FBdEIsVUFBdUIsUUFBZ0I7UUFDbkMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNmLEtBQUssSUFBSSxDQUFDLFFBQVE7Z0JBQ2QsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDekIsS0FBSyxJQUFJLENBQUMsTUFBTTtnQkFDWixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUN2QixLQUFLLElBQUksQ0FBQyxRQUFRO2dCQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3pCLEtBQUssSUFBSSxDQUFDLFNBQVM7Z0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDMUIsS0FBSyxJQUFJLENBQUMsVUFBVTtnQkFDaEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDM0IsS0FBSyxJQUFJLENBQUMsT0FBTztnQkFDYixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUN4QixLQUFLLElBQUksQ0FBQyxRQUFRO2dCQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3pCLEtBQUssSUFBSSxDQUFDLElBQUk7Z0JBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDckIsS0FBSyxJQUFJLENBQUMsTUFBTTtnQkFDWixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHO2dCQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ3BCLEtBQUssSUFBSSxDQUFDLFVBQVU7Z0JBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQzNCLEtBQUssSUFBSSxDQUFDLFFBQVE7Z0JBQ2QsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDekIsS0FBSyxJQUFJLENBQUMsU0FBUztnQkFDZixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUMxQixLQUFLLElBQUksQ0FBQyxPQUFPO2dCQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3hCLEtBQUssSUFBSSxDQUFDLElBQUk7Z0JBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDckIsS0FBSyxJQUFJLENBQUMsU0FBUztnQkFDZixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUMxQixLQUFLLElBQUksQ0FBQyxHQUFHO2dCQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ3BCLEtBQUssSUFBSSxDQUFDLFVBQVU7Z0JBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQzNCO2dCQUNJLE1BQU0sSUFBSSx5QkFBWSxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDL0QsQ0FBQztJQUNMLENBQUM7SUFDTCxZQUFDO0FBQUQsQ0FBQyxBQTlERDtBQUNrQixjQUFRLEdBQVcsTUFBTSxDQUFDO0FBQzFCLFlBQU0sR0FBVyxNQUFNLENBQUM7QUFDeEIsY0FBUSxHQUFXLE1BQU0sQ0FBQztBQUMxQixlQUFTLEdBQVcsTUFBTSxDQUFDO0FBQzNCLGdCQUFVLEdBQVcsTUFBTSxDQUFDO0FBQzVCLGFBQU8sR0FBVyxNQUFNLENBQUM7QUFDekIsY0FBUSxHQUFXLE1BQU0sQ0FBQztBQUMxQixVQUFJLEdBQVcsTUFBTSxDQUFDO0FBQ3RCLFlBQU0sR0FBVyxNQUFNLENBQUM7QUFDeEIsU0FBRyxHQUFXLE1BQU0sQ0FBQztBQUNyQixnQkFBVSxHQUFXLE1BQU0sQ0FBQztBQUM1QixjQUFRLEdBQVcsTUFBTSxDQUFDO0FBQzFCLGVBQVMsR0FBVyxNQUFNLENBQUM7QUFDM0IsYUFBTyxHQUFXLE1BQU0sQ0FBQztBQUN6QixVQUFJLEdBQVcsTUFBTSxDQUFDO0FBQ3RCLGVBQVMsR0FBVyxNQUFNLENBQUM7QUFDM0IsU0FBRyxHQUFXLE1BQU0sQ0FBQztBQUNyQixnQkFBVSxHQUFXLE1BQU0sQ0FBQztBQWxCakMsc0JBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgIFTDvG1heSDDh2ViZXIgPHR1bWF5Y2ViZXJAZ21haWwuY29tPlxuICogQGxpbmsgICAgaHR0cHM6Ly9naXRodWIuY29tL2JyZW5kdHVtaS9ia21leHByZXNzXG4gKiBAbGljZW5zZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbmltcG9ydCB7QmV4RXhjZXB0aW9ufSBmcm9tIFwiLi9leGNlcHRpb25zXCI7XG5leHBvcnQgZW51bSBFbnZpcm9ubWVudCB7XG4gICAgREVWID0gMSxcbiAgICBMT0NBTCxcbiAgICBTQU5EQk9YLFxuICAgIFBST0RVQ1RJT04sXG59XG5cbmV4cG9ydCBjbGFzcyBCYW5rcyB7XG4gICAgcHVibGljIHN0YXRpYyBBTEJBUkFLQTogc3RyaW5nID0gXCIwMjAzXCI7XG4gICAgcHVibGljIHN0YXRpYyBBS0JBTks6IHN0cmluZyA9IFwiMDA0NlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgQkFOS0FTWUE6IHN0cmluZyA9IFwiMDIwOFwiO1xuICAgIHB1YmxpYyBzdGF0aWMgREVOSVpCQU5LOiBzdHJpbmcgPSBcIjAxMzRcIjtcbiAgICBwdWJsaWMgc3RhdGljIEZJTkFOU0JBTks6IHN0cmluZyA9IFwiMDExMVwiO1xuICAgIHB1YmxpYyBzdGF0aWMgR0FSQU5USTogc3RyaW5nID0gXCIwMDYyXCI7XG4gICAgcHVibGljIHN0YXRpYyBIQUxLQkFOSzogc3RyaW5nID0gXCIwMDEyXCI7XG4gICAgcHVibGljIHN0YXRpYyBIU0JDOiBzdHJpbmcgPSBcIjAxMjNcIjtcbiAgICBwdWJsaWMgc3RhdGljIElTQkFOSzogc3RyaW5nID0gXCIwMDY0XCI7XG4gICAgcHVibGljIHN0YXRpYyBJTkc6IHN0cmluZyA9IFwiMDA5OVwiO1xuICAgIHB1YmxpYyBzdGF0aWMgS1VWRVlUVFVSSzogc3RyaW5nID0gXCIwMjA1XCI7XG4gICAgcHVibGljIHN0YXRpYyBPREVBQkFOSzogc3RyaW5nID0gXCIwMTQ2XCI7XG4gICAgcHVibGljIHN0YXRpYyBTRUtFUkJBTks6IHN0cmluZyA9IFwiMDA1OVwiO1xuICAgIHB1YmxpYyBzdGF0aWMgVEVCQkFOSzogc3RyaW5nID0gXCIwMDMyXCI7XG4gICAgcHVibGljIHN0YXRpYyBURktCOiBzdHJpbmcgPSBcIjAyMDZcIjtcbiAgICBwdWJsaWMgc3RhdGljIFZBS0lGQkFOSzogc3RyaW5nID0gXCIwMDE1XCI7XG4gICAgcHVibGljIHN0YXRpYyBZS0I6IHN0cmluZyA9IFwiMDA2N1wiO1xuICAgIHB1YmxpYyBzdGF0aWMgWklSQUFUQkFOSzogc3RyaW5nID0gXCIwMDEwXCI7XG5cbiAgICBwdWJsaWMgc3RhdGljIHZhbGlkYXRlKGJhbmtDb2RlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICBzd2l0Y2ggKGJhbmtDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIHRoaXMuQUxCQVJBS0EgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkFMQkFSQUtBO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkFLQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuQUtCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkJBTktBU1lBIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5CQU5LQVNZQTtcbiAgICAgICAgICAgIGNhc2UgdGhpcy5ERU5JWkJBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkRFTklaQkFOSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5GSU5BTlNCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5GSU5BTlNCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkdBUkFOVEkgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkdBUkFOVEk7XG4gICAgICAgICAgICBjYXNlIHRoaXMuSEFMS0JBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkhBTEtCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLkhTQkMgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkhTQkM7XG4gICAgICAgICAgICBjYXNlIHRoaXMuSVNCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5JU0JBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuSU5HIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5JTkc7XG4gICAgICAgICAgICBjYXNlIHRoaXMuS1VWRVlUVFVSSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuS1VWRVlUVFVSSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5PREVBQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuT0RFQUJBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuU0VLRVJCQU5LIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5TRUtFUkJBTks7XG4gICAgICAgICAgICBjYXNlIHRoaXMuVEVCQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuVEVCQkFOSztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5URktCIDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5URktCO1xuICAgICAgICAgICAgY2FzZSB0aGlzLlZBS0lGQkFOSyA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuVkFLSUZCQU5LO1xuICAgICAgICAgICAgY2FzZSB0aGlzLllLQiA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuWUtCO1xuICAgICAgICAgICAgY2FzZSB0aGlzLlpJUkFBVEJBTksgOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlpJUkFBVEJBTks7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBCZXhFeGNlcHRpb24oXCJQbGVhc2UgY2hlY2sgeW91ciBiYW5rIGNvZGUhXCIpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19